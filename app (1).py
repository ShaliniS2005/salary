# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1luS5_9Pu6kGiqvWUuC30bc8EmGkeCbFt
"""

!pip install streamlit
import streamlit as st
import pickle
import numpy as np
!pip install streamlit
import streamlit as st
import pickle
import numpy as np

# Load the trained model
with open("/content/Salary Prediction.pkl", "rb") as file:
    model = pickle.load(file)

st.title("Salary Prediction App")
st.write("Fill the information below to predict the salary:")

# --- Example Input Fields ---
# You should update these according to your model's input features
experience = st.slider("Years of Experience", 0, 50, 1)
education_level = st.selectbox("Education Level", ["High School", "Bachelor's", "Master's", "PhD"])
location = st.selectbox("Job Location", ["Urban", "Suburban", "Rural"])

# --- Convert categorical inputs to numerical if needed ---
education_mapping = {"High School": 0, "Bachelor's": 1, "Master's": 2, "PhD": 3}
location_mapping = {"Urban": 0, "Suburban": 1, "Rural": 2}

input_data = np.array([
    experience,
    education_mapping[education_level],
    location_mapping[location]
]).reshape(1, -1)

# Predict and display result
if st.button("Predict Salary"):
    salary = model.predict(input_data)
    st.success(f"Predicted Salary: ₹{salary[0]:,.2f}")
st.title("Salary Prediction App")
st.write("Fill the information below to predict the salary:")

# --- Example Input Fields ---
# You should update these according to your model's input features
experience = st.slider("Years of Experience", 0, 50, 1)
education_level = st.selectbox("Education Level", ["High School", "Bachelor's", "Master's", "PhD"])
location = st.selectbox("Job Location", ["Urban", "Suburban", "Rural"])

# --- Convert categorical inputs to numerical if needed ---
education_mapping = {"High School": 0, "Bachelor's": 1, "Master's": 2, "PhD": 3}
location_mapping = {"Urban": 0, "Suburban": 1, "Rural": 2}

input_data = np.array([
    experience,
    education_mapping[education_level],
    location_mapping[location]
]).reshape(1, -1)

# Predict and display result
if st.button("Predict Salary"):
    salary = model.predict(input_data)
    st.success(f"Predicted Salary: ₹{salary[0]:,.2f}")